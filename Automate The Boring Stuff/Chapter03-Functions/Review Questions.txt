
1. Why are functions advantageous to have in your programs?

They make code reusable and stops code repetition.  They also make debugging easier through changing the scope of variables.
Variables inside of a function are local, unless they are specifically identified as global with the global keyword.

2. When does the code in a function execute: when the function is defined or when the function is called?

When the function is called.

3. What statement creates a function?

def functionName()
def functionName(parameter1):
def functionName(parameter1 ... parametern)

4. What is the difference between a function and a function call?

A function is the block of code that has been identified as a function through the def functionName(parameter1): syntax.
A function call is when that block of code is called via its function signature and is actually executed. functionName(1)

5. How many global scopes are there in a Python program? How many local scopes?

There is one global scope, which is created when the program starts and destroyed when it finishes.
There can be many local scopes for the same variable name, they are created when the function is called and destroyed when it finishes.

6. What happens to variables in a local scope when the function call returns?

They are destroyed and can be no longer used.

7. What is a return value? Can a return value be part of an expression?

A return value is data that is returned by a function. 
All functions implicitly return None, but explicit returns can be set as well.
Return values can be used in an expression.  A common approach is to return a boolean value from a function and evaluate that in an expression.

8. If a function does not have a return statement, what is the return value of a call to that function?

The function will implicity return None for all functions that don't have an explicit return statement.

9. How can you force a variable in a function to refer to the global variable?

Use the keyword global.

def spam():
	global eggs = 'global call'
	ham = 'local call'

10. What is the data type of None?

It is nothing, it means that there is no value.

11. What does the import areallyourpetsnamederic statement do?

It will import the module called areallyourpetsnamederic.  This means that the functions inside of that module can now be used in your program.

12. If you had a function named bacon() in a module named spam, how would you call it after importing spam?

import spam
spam.bacon()

13. How can you prevent a program from crashing when it gets an error?

Use the try and except block.
Any code inside of the try part that causes and error will immediately stop executing.
The error will be caught at the except part, and the code here will be executed instead.

14. What goes in the try clause? What goes in the except clause?

The try clause has the code that you want to try and run.
The except clause has the the errors that you want to catch, and the code that you want to run if an error occurs.