Q:


1. What is []?

This is an empty list.

Q:


2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)

spam[3] = 'hello'

For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].

Q:


3. What does spam[int(int('3' * 2) // 11)] evaluate to?
int('3' * 2) = 33 because a string * a number will repeat that string.
33//11 = 3
so spam[3] is 'd'

Q:


4. What does spam[-1] evaluate to?

The last element in the list, so 'd'.

Q:


5. What does spam[:2] evaluate to?

This will create a slice from the list, start at 0 and finishing at 1. So the first 2 items.
So it will be ['a', 'b']

For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].

Q:


6. What does bacon.index('cat') evaluate to?

return 1

Q:


7. What does bacon.append(99) make the list value in bacon look like?

[3.14, 'cat', 11, 'cat', True, 99]

Q:


8. What does bacon.remove('cat') make the list value in bacon look like?

[3.14, 11, 'cat', True, 99]

Q:


9. What are the operators for list concatenation and list replication?

# concatenation
[1, 2] + ['A', 'B'] + ['y', 'z']

[1, 2, 'A', 'B', 'y', 'z']

# replication
[1, 2, 3] * 3

[1, 2, 3, 1, 2, 3, 1, 2, 3]

Q:


10. What is the difference between the append() and insert() list methods?

append() will add to the end of the list
insert() will insert into the specified index position

Q:


11. What are two ways to remove values from a list?

aList.del[anIndex]
aList.remove(aValue)

Q:


12. Name a few ways that list values are similar to string values.

A list holds a list of things. A string holds a list of characters.
So all the list behaviours can apply to strings.

Q:


13. What is the difference between lists and tuples?

Lists are mutable (they can changed) and tuples are immutable (they can't be changed).


Q:


14. How do you type the tuple value that has just the integer value 42 in it?

You must put a trailing comma at the end so Python knows it is a tuple and not just an int.
type((42,))

Q:


15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?

list(aTuple)
tuple(AList)

Q:


16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?

The contain object references. This means that it is a memory address that points to the actual value.

Q:


17. What is the difference between copy.copy() and copy.deepcopy()?

copy.copy() can only copy lists that have non-list values in them
copy.deepcoy() can copy lists that have list values in them.